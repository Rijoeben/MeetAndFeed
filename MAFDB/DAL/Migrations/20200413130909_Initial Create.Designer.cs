// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(MeetAndFeedDbContext))]
    [Migration("20200413130909_Initial Create")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("MAFDB.Allergy", b =>
                {
                    b.Property<long>("AllergyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AllergyName")
                        .HasColumnType("TEXT");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AllergyId");

                    b.HasIndex("UserId");

                    b.ToTable("Allergies");

                    b.HasData(
                        new
                        {
                            AllergyId = 1L,
                            AllergyName = "Cereals containing gluten"
                        },
                        new
                        {
                            AllergyId = 2L,
                            AllergyName = "Crustaceans"
                        },
                        new
                        {
                            AllergyId = 3L,
                            AllergyName = "Eggs"
                        },
                        new
                        {
                            AllergyId = 4L,
                            AllergyName = "Fish"
                        },
                        new
                        {
                            AllergyId = 5L,
                            AllergyName = "Peanuts"
                        },
                        new
                        {
                            AllergyId = 6L,
                            AllergyName = "Soya"
                        },
                        new
                        {
                            AllergyId = 7L,
                            AllergyName = "Lactose(Milk)"
                        },
                        new
                        {
                            AllergyId = 8L,
                            AllergyName = "Nuts(Tree Nuts)"
                        },
                        new
                        {
                            AllergyId = 9L,
                            AllergyName = "Celery"
                        },
                        new
                        {
                            AllergyId = 10L,
                            AllergyName = "Mustad"
                        },
                        new
                        {
                            AllergyId = 11L,
                            AllergyName = "Sesame"
                        },
                        new
                        {
                            AllergyId = 12L,
                            AllergyName = "Sulphur Dioxide(Sulphite"
                        },
                        new
                        {
                            AllergyId = 13L,
                            AllergyName = "Luping"
                        },
                        new
                        {
                            AllergyId = 14L,
                            AllergyName = "Molluscs"
                        });
                });

            modelBuilder.Entity("MAFDB.Post", b =>
                {
                    b.Property<long>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AmountOfPeople")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Dish")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("PostId");

                    b.HasIndex("CreatorUserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("MAFDB.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductName")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MAFDB.Review", b =>
                {
                    b.Property<long>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReviewId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("MAFDB.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<char>("Gender")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Preference")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.HasIndex("PostId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MAFDB.Allergy", b =>
                {
                    b.HasOne("MAFDB.User", null)
                        .WithMany("Allergies")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MAFDB.Post", b =>
                {
                    b.HasOne("MAFDB.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");
                });

            modelBuilder.Entity("MAFDB.User", b =>
                {
                    b.HasOne("MAFDB.Post", null)
                        .WithMany("Participants")
                        .HasForeignKey("PostId");
                });
#pragma warning restore 612, 618
        }
    }
}
